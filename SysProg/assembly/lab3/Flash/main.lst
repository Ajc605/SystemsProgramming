


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             storage,DATA
    2 00000000         array
    3 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            SPACE            4*20        ; Declares a 20-wor
                                                            d storage area
    4 00000050         array_end
    5 00000050         
    6 00000050                 AREA             mainarea,CODE
    7 00000000                 EXPORT           __main
    8 00000000         __main
    9 00000000         ; Your code goes here
   10 00000000 4807            LDR              r0, =array
   11 00000002 4908            LDR              r1, =array_end
   12 00000004 F04F 0200       MOV              r2, #0
   13 00000008 F04F 0301       MOV              r3, #1
   14 0000000C         loop
   15 0000000C EB03 0402       ADD              r4, r3, r2  ; 
   16 00000010 F840 4B04       STR              r4, [r0], #4 ; Store the value 
                                                            at r3 to tha addres
                                                            s in r0 and then in
                                                            creament r0 by 4
   17 00000014 461A            MOV              r2, r3
   18 00000016 4623            MOV              r3, r4
   19 00000018 4288            CMP              r0, r1
   20 0000001A D3F7            BLO              loop
   21 0000001C         
   22 0000001C E7FE            B                .           ; Loop forever
   23 0000001E         
   24 0000001E 00 00           ALIGN
   25 00000020                 END
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\flash\main.d -o.\flash\main.o -I.\RTE\_STM32F407_Flash -IC



ARM Macro Assembler    Page 2 


:\Users\aiden\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\U
sers\aiden\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.14.0\Drivers\CMSIS\Devi
ce\ST\STM32F4xx\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERS
ION SETA 530" --predefine="_RTE_ SETA 1" --predefine="STM32F407xx SETA 1" --pre
define="_RTE_ SETA 1" --list=.\flash\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

array 00000000

Symbol: array
   Definitions
      At line 2 in file main.s
   Uses
      At line 10 in file main.s
Comment: array used once
array_end 00000050

Symbol: array_end
   Definitions
      At line 4 in file main.s
   Uses
      At line 11 in file main.s
Comment: array_end used once
storage 00000000

Symbol: storage
   Definitions
      At line 1 in file main.s
   Uses
      None
Comment: storage unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

__main 00000000

Symbol: __main
   Definitions
      At line 8 in file main.s
   Uses
      At line 7 in file main.s
Comment: __main used once
loop 0000000C

Symbol: loop
   Definitions
      At line 14 in file main.s
   Uses
      At line 20 in file main.s
Comment: loop used once
mainarea 00000000

Symbol: mainarea
   Definitions
      At line 6 in file main.s
   Uses
      None
Comment: mainarea unused
3 symbols
343 symbols in table
